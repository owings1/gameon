image: node:alpine
variables:
  HUB_IMAGE_BASE: owings1/gameon

stages:
  - test
  - publish

test:
  stage: test
  tags:
    - docker
  script:
    - npm install
    - npm test

test_dist:
  stage: test
  when: manual
  tags:
    - docker
  before_script:
    - apk add git p7zip xz curl perl-utils
  script:
    - npm install --unsafe-perm
    - npm run-script dist

#test_docker:
#  stage: test
#  when: manual
#  tags:
#    - shell
#  before_script:
#    - export IMAGE_TAG=${HUB_IMAGE_BASE}:${CI_JOB_ID}
#    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
#  script:
#    - docker build -t "$IMAGE_TAG" .
#    - docker rmi "$IMAGE_TAG"
#  after_script:
#    - docker logout

##publish_s3:
##  stage: publish
##  only:
##    - tags
##    - /^v[0-9]+[0-9.]+$/
##  tags:
##    - docker
##  before_script:
##    - apk add git p7zip xz curl perl-utils
##  script:
##    - npm install --unsafe-perm
##    - npm run-script dist_and_publish

publish_s3:
  stage: publish
  only:
    - tags
    - /^v[0-9]+[0-9.]+$/
  tags:
    - shell
  variables:
    DIST_IMAGE: "${CI_REGISTRY_IMAGE}/dist:${CI_JOB_ID}"
  before_script:
    - docker build -t "$DIST_IMAGE" -f res/docker/dist.dockerfile .
  script:
    - docker run --rm -e "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" -e "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" "$DIST_IMAGE" npm run-script dist_and_publish
  after_script:
    - docker rmi "$DIST_IMAGE"

#publish_docker:
#  stage: publish
#  only:
#    - tags
#    - /^v[0-9]+[0-9.]+$/
#  tags:
#    - shell
#  before_script:
#    - export IMAGE_TAG=${HUB_IMAGE_BASE}:${CI_COMMIT_TAG:1}
#    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
#  script:
#    - docker build -t "$IMAGE_TAG" .
#    - docker push "$IMAGE_TAG"
#    - docker rmi "$IMAGE_TAG"
#  after_script:
#    - docker logout